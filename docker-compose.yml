services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile    
    container_name: api_container
    expose:
      - "8000"
    networks:
      - backend
    env_file:
      - .env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - db

  webagenda:
    build:
      context: ./webapp
      dockerfile: Dockerfile    
    container_name: webapp_container
    expose:
      - "8001"
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8001
    networks:
      - backend
    env_file:
      - .env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: nginx_container
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media

  db:
    image: postgres:17
    container_name: agendadb
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5234:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    env_file:
      - .env

networks:
  backend:

volumes:
  static_volume:
  media_volume:
  postgres_data:
